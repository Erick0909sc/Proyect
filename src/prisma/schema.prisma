// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(User)
  cart          Cart?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Product {
  code        String     @id
  name        String
  description String
  price       Float
  marca       String
  image       String
  rating      Float
  discount    Float
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  cartItems   CartItem[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  products  CartItem[]
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id          Int     @id @default(autoincrement())
  quantity    Int
  product     Product @relation(fields: [productCode], references: [code])
  productCode String
  cart        Cart    @relation(fields: [cartId], references: [id])
  cartId      Int

  @@unique([productCode, cartId])
}

enum Role {
  User
  Admin
  Manager
}
